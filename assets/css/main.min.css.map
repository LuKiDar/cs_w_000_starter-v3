{"version":3,"sources":["file:/D:/Local/starter-theme/app/public/wp-content/themes/cs_w_000_starter-v3/assets/scss/abstracts/_mixins.scss"],"names":[],"mappings":"AAyFC,oBAAA,qBAAA,oBAAA,uCACC,WAAA,KACA,QAAA,GACA,QAAA,aACA,OAAA,KACA,sBAAA,IAAA,IAAA,cAAA,IAAA,IACA,oBAAA,UAAA,YAAA,UACA,kBAAA,QAAA,UAAA,QACA,SAAA,SACA,IAAA,IACA,UAAA,iBACA,MAAA,KACA,QAAA,EAIA,oBAAA,qBAAA,oBAAA,kCACC,mBAAA,gDAAA,WAAA","file":"main.min.css","sourcesContent":["/**\r\n * Mixins\r\n */\r\n \r\n// Media Queries\r\n@mixin mediaMinWidth( $minWidth ){\r\n\t@if type-of($minWidth)==string {\r\n\t\t$minWidth: map-get($breakpoints, $minWidth);\r\n\t}\r\n\r\n\t@media screen and (min-width: #{$minWidth + 0px}){\r\n\t\t@content;\r\n\t}\r\n}\r\n@mixin mediaMaxWidth( $maxWidth ){\r\n\t@if type-of($maxWidth)==string {\r\n\t\t$maxWidth: map-get($breakpoints, $maxWidth) - 1;\r\n\t}\r\n\r\n\t@media screen and (max-width: #{$maxWidth + 0px}){\r\n\t\t@content;\r\n\t}\r\n}\r\n@mixin mediaBetween( $minWidth, $maxWidth ){\r\n\t@if type-of($minWidth)==string {\r\n\t\t$minWidth: map-get($breakpoints, $minWidth);\r\n\t}\r\n\t@if type-of($maxWidth)==string {\r\n\t\t$maxWidth: map-get($breakpoints, $maxWidth) - 1;\r\n\t}\r\n\r\n\t@media screen and (min-width: #{$minWidth + 0px}) and (max-width: #{$maxWidth + 0px}){\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n\r\n// Get styles\r\n@mixin getStyles( $styles, $screen:'' ){\r\n\t@each $name, $value in $styles {\r\n\t\t#{$name}: #{$value};\r\n\t}\r\n}\r\n\r\n@mixin getStylesBreakpoints( $styles ){\r\n\t@if type_of($styles)=='map' {\r\n\t\t@each $itemScreen, $itemStyles in $styles {\r\n\t\t\t@if $itemScreen=='xl' or $itemScreen=='lg' or $itemScreen=='md' or $itemScreen=='sm' or $itemScreen=='xs'{\r\n\t\t\t\t@include mediaMaxWidth( $itemScreen ){\r\n\t\t\t\t\t@include getStyles( $itemStyles, $itemScreen );\r\n\t\t\t\t}\r\n\t\t\t} @else if $itemScreen=='default' {\r\n\t\t\t\t@include getStyles( $itemStyles, $itemScreen );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// Placeholder\r\n@mixin placeholder {\r\n\t&.placeholder { @content; }\r\n\t&:-ms-input-placeholder { @content; }\r\n\t&:-moz-placeholder { @content; }\r\n\t&::-moz-placeholder { @content; }\r\n\t&::-webkit-input-placeholder { @content; }\r\n}\r\n\r\n\r\n// Block Cover: creates a block that covers the full width/height of parent div\r\n @mixin blockCover(){\r\n\tcontent: '';\r\n\tdisplay: block;\r\n\theight: 100%;\r\n\tleft: 0;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\tz-index: 1;\r\n}\r\n\r\n\r\n// Icon Mask: creates a mask for an icon\r\n// Usage: @include iconMask($icons, after, $black, 20px);\r\n@mixin iconMask( $icons, $position: both, $color: currentColor, $size: 1rem ){\r\n\t$selector: if ( $position==before, '::before',\r\n\t\t\t   if ( $position== after, '::after',\r\n\t\t\t\t'::before, ::after') );\r\n\r\n\t&[class^=\"has-icon-\"]#{$selector} {\r\n\t\tbackground: $color;\r\n\t\tcontent: '';\r\n\t\tdisplay: inline-block;\r\n\t\theight: $size;\r\n\t\tmask-position: 50% 50%;\r\n\t\tmask-repeat: no-repeat;\r\n\t\tmask-size: contain;\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\ttransform: translateY(-50%);\r\n\t\twidth: $size;\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\t@each $icon in $icons {\r\n\t\t&.has-icon-#{$icon}#{$selector} {\r\n\t\t\tmask-image: url('../../../assets/images/icons/icon-#{$icon}.svg');\r\n\t\t}\r\n\t}\r\n}"]}