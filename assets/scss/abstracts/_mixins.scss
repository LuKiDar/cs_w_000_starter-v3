/**
 * Mixins
 */
 
// Media Queries
@mixin mediaMinWidth( $minWidth ){
	@if type-of($minWidth)==string {
		$minWidth: map-get($breakpoints, $minWidth);
	}

	@media screen and (min-width: #{$minWidth + 0px}){
		@content;
	}
}
@mixin mediaMaxWidth( $maxWidth ){
	@if type-of($maxWidth)==string {
		$maxWidth: map-get($breakpoints, $maxWidth) - 1;
	}

	@media screen and (max-width: #{$maxWidth + 0px}){
		@content;
	}
}
@mixin mediaBetween( $minWidth, $maxWidth ){
	@if type-of($minWidth)==string {
		$minWidth: map-get($breakpoints, $minWidth);
	}
	@if type-of($maxWidth)==string {
		$maxWidth: map-get($breakpoints, $maxWidth) - 1;
	}

	@media screen and (min-width: #{$minWidth + 0px}) and (max-width: #{$maxWidth + 0px}){
		@content;
	}
}


// Get styles
@mixin getStyles( $styles, $screen:'' ){
	@each $name, $value in $styles {
		#{$name}: #{$value};
	}
}

@mixin getStylesBreakpoints( $styles ){
	@if type_of($styles)=='map' {
		@each $itemScreen, $itemStyles in $styles {
			@if $itemScreen=='xl' or $itemScreen=='lg' or $itemScreen=='md' or $itemScreen=='sm' or $itemScreen=='xs'{
				@include mediaMaxWidth( $itemScreen ){
					@include getStyles( $itemStyles, $itemScreen );
				}
			} @else if $itemScreen=='default' {
				@include getStyles( $itemStyles, $itemScreen );
			}
		}
	}
}


// Placeholder
@mixin placeholder {
	&.placeholder { @content; }
	&:-ms-input-placeholder { @content; }
	&:-moz-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&::-webkit-input-placeholder { @content; }
}


// Block Cover: creates a block that covers the full width/height of parent div
 @mixin blockCover(){
	content: '';
	display: block;
	height: 100%;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
	z-index: 1;
}


// Icon Mask: creates a mask for an icon
// Usage: @include iconMask($icons, after, $black, 20px);
@mixin iconMask( $icons, $position: both, $color: currentColor, $size: 1rem ){
	$selector: if ( $position==before, '::before',
			   if ( $position== after, '::after',
				'::before, ::after') );

	&[class^="has-icon-"]#{$selector} {
		background: $color;
		content: '';
		display: inline-block;
		height: $size;
		mask-position: 50% 50%;
		mask-repeat: no-repeat;
		mask-size: contain;
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		width: $size;
		z-index: 2;
	}

	@each $icon in $icons {
		&.has-icon-#{$icon}#{$selector} {
			mask-image: url('../../../assets/images/icons/icon-#{$icon}.svg');
		}
	}
}